name: 'GMT Pytest'
description:  'Run Pytest with setup and teardown'
inputs:
  metrics-to-turn-off:
    description: 'a list of metrics to turn off that is passed to the disable metrics script'
    required: false
    default: ''
  gmt-directory:
    description: 'The root directory of the gmt repository'
    required: false
    default: '.'
  tests-directory:
    description: 'The directory where to run the tests from'
    required: false
    default: './test'
  tests-command:
    description: 'The command to run the tests'
    required: false
    default: 'pytest'
runs:
  using: 'composite'
  steps:
    - name: Install python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install fastapi pytest psycopg2 numpy pandas xgboost statsmodels scipy scikit-learn
    
    - name: Run Prereqs and Install Script
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}
      run: |
        sudo apt install lm-sensors libsensors-dev libglib2.0-0 libglib2.0-dev
        ./install.sh -p testpw

    - name: Turn off metric providers which do not work in github vm
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}
      run: |
        ./disable-metric-providers.sh ${{ inputs.metrics-to-turn-off }}

    - name: Setup Test environment
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}/test
      run: |
        python3 setup-test-env.py
        
    - name: Start Test container
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}/test
      run: |
        ./start-test-containers.sh -d
   
    - name: Sleep for 10 seconds
      run: sleep 10s
      shell: bash
        
    - name: Run Tests
      shell: bash
      working-directory: ${{ inputs.tests-directory }}
      run: |
        ${{ inputs.tests-command }} -rA | tee /tmp/test-results.txt

    - name: Display Results
      shell: bash
      if: always()
      working-directory: ${{ inputs.tests-directory }}
      run: |
        cat /tmp/test-results.txt | grep -Pz '(=*) short test summary(.*\n)*' >> $GITHUB_STEP_SUMMARY

    - name: Stop Containers
      shell: bash
      if: always()
      working-directory: ${{ inputs.gmt-directory }}/test
      run: |
        ./stop-test-containers.sh
