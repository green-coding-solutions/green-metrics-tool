name: 'GMT Pytest'
description:  'Run Pytest with setup and teardown'
inputs:
  metrics-to-turn-off:
    description: 'a list of metrics to turn off that is passed to the disable metrics script'
    required: false
    default: ''
  gmt-directory:
    description: 'The root directory of the gmt repository'
    required: false
    default: '.'
  tests-command:
    description: 'The command to run the tests'
    required: false
    default: 'pytest'
  github-token:
    description: 'pass in your secrets.GITHUB_TOKEN'
    required: true

runs:
  using: 'composite'
  steps:
    - name: setup_python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - id: python_cache
      uses: actions/cache@v3
      with:
        path: venv
        key: pip-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}-${{ hashFiles('metric_providers/psu/energy/ac/xgboost/machine/model/requirements.txt') }}

    - name: Install docker for MacOS
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install docker docker-compose
        mkdir -p ~/.docker/cli-plugins
        ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose
        colima start --network-address

    - name: GMT Install
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}
      run: |
        if [ "$RUNNER_OS" = "macOS" ]; then
          ./install_mac.sh -p testpw -a http://api.green-coding.internal:9142 -m http://metrics.green-coding.internal:9142 -n
        else # linux
          ./install_linux.sh -p testpw -a http://api.green-coding.internal:9142 -m http://metrics.green-coding.internal:9142 -n -t
        fi
        source venv/bin/activate
        python3 -m pip install -r requirements-dev.txt
        python3 -m pip install -r metric_providers/psu/energy/ac/xgboost/machine/model/requirements.txt\
        cd tests
        python3 setup-test-env.py --no-docker-build

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master

    - name: Login to Docker Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.github-token }}

    - name: Build docker-compose
      id: build-docker-compose
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}/docker
      run: |
        { DOCKER_OUTPUT=$(docker buildx bake --file test-compose.yml --file docker-compose-cache.json 2>&1); DOCKER_EXIT_CODE=$?; } || true
        if [ "$DOCKER_EXIT_CODE" -ne 0 ]; then
          echo "Docker build failed with exit code $DOCKER_EXIT_CODE"
          echo "buildx output:"
          echo $DOCKER_OUTPUT
          if echo "$DOCKER_OUTPUT" | grep -q "403 Forbidden"; then
            echo "Docker build failed due to permissions issue. Continuing..."
          else
              exit 1
          fi
        fi

    - name: Build test image and start test containers
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}
      run: |
        source venv/bin/activate
        cd tests
        ./start-test-containers.sh -d
        sleep 10
        cd stress-application
        docker build . -t gcb_stress_gmt_run_tmp

    - name: Run Tests
      continue-on-error: true
      shell: bash
      working-directory: ${{ inputs.gmt-directory }}
      run: |
        source venv/bin/activate
        cd tests
        if [ "$RUNNER_OS" = "macOS" ]; then
          python3 -m pytest -m "not no_mac_workflow" -rA | tee /tmp/test-results.txt
        else # linux
          python3 -m ${{ inputs.tests-command }} -rA | tee /tmp/test-results.txt
        fi

    - name: Display Results
      shell: bash
      if: always()
      run: |
        if [ "$RUNNER_OS" = "macOS" ]; then
          cat /tmp/test-results.txt | grep -Eo '(=*) short test summary(.*\n)*' >> $GITHUB_STEP_SUMMARY
        else # linux
          cat /tmp/test-results.txt | grep -oPz '(=*) short test summary(.*\n)*' >> $GITHUB_STEP_SUMMARY
        fi

    - name: Stop Containers
      shell: bash
      if: always()
      working-directory: ${{ inputs.gmt-directory }}/tests
      run: |
        ./stop-test-containers.sh
