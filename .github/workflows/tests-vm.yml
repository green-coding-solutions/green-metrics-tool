name: Daily Test Run - Virtual Machine
run-name: Schedualed - ${{ github.ref_name }}
on:
  schedule:
    - cron: '0 0 * * *'
      branches: [ "main", "dev" ]
  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

jobs:
  #TODO: is there a way to do this that's even more light-weight?
  check_date:
    runs-on: ubuntu-latest
    name: Check latest commit
    outputs:
      recent_dev_commit: ${{ steps.check_dev_commits.outputs.recent_dev_commit }}
      recent_main_commit: ${{ steps.check_main_commits.outputs.recent_main_commit }}
    steps:
      - uses: actions/checkout@v3
      - name: print latest_commit
        run: echo ${{ github.sha }}

      #TODO: instead of 24 hours, last workflow run
      - id: check_dev_commits
        continue-on-error: true
        name: check latest dev commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: |
         dateofcommit=$(curl -s https://api.github.com/repos/green-coding-berlin/green-metrics-tool/commits/dev | jq -r '.commit.author.date')
         commit_timestamp=$(date --date "$dateofcommit" +'%s')
         one_day_ago=$(date --date '1 day ago' +'%s')
         [ $commit_timestamp -gt $one_day_ago ] && echo "recent_dev_commit=true" >> $GITHUB_OUTPUT

      - id: check_main_commits
        continue-on-error: true
        name: check latest main commit is less than a day
        if: ${{ github.event_name == 'schedule' }}
        run: |
         dateofcommit=$(curl -s https://api.github.com/repos/green-coding-berlin/green-metrics-tool/commits/main | jq -r '.commit.author.date')
         commit_timestamp=$(date --date "$dateofcommit" +'%s')
         one_day_ago=$(date --date '1 day ago' +'%s')
         [ $commit_timestamp -gt $one_day_ago ] && echo "recent_main_commit=true" >> $GITHUB_OUTPUT

  run-tests:
    needs: check_date
    if: ${{ needs.check_date.outputs.recent_dev_commit == 'true' || needs.check_date.outputs.recent_main_commit == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        branch: ['dev', 'main']
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          submodules: 'true'
      
      - name: 'Setup, Run, and Teardown Tests'
        uses: ./.github/actions/gmt-pytest
        with:
           metrics-to-turn-off: 'RAPL System Sensors Debug CGroupV2'