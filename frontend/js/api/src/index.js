/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import CIMeasurement from './model/CIMeasurement';
import CIMeasurementOld from './model/CIMeasurementOld';
import CarbonIntensityG from './model/CarbonIntensityG';
import CarbonUg from './model/CarbonUg';
import CbCompanyUuid from './model/CbCompanyUuid';
import CbMachineUuid from './model/CbMachineUuid';
import CbProjectUuid from './model/CbProjectUuid';
import City from './model/City';
import Co2Eq from './model/Co2Eq';
import Co2I from './model/Co2I';
import Email from './model/Email';
import FilterMachine from './model/FilterMachine';
import FilterProject from './model/FilterProject';
import FilterTags from './model/FilterTags';
import FilterType from './model/FilterType';
import HTTPValidationError from './model/HTTPValidationError';
import ImageUrl from './model/ImageUrl';
import Ip from './model/Ip';
import JobChange from './model/JobChange';
import Lat from './model/Lat';
import Lon from './model/Lon';
import Note from './model/Note';
import ProjectId from './model/ProjectId';
import Software from './model/Software';
import UsageScenarioVariables from './model/UsageScenarioVariables';
import UserSetting from './model/UserSetting';
import ValidationError from './model/ValidationError';
import ValidationErrorLocInner from './model/ValidationErrorLocInner';
import Value from './model/Value';
import DefaultApi from './api/DefaultApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var FastApi = require('index'); // See note below*.
* var xxxSvc = new FastApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new FastApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new FastApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new FastApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The CIMeasurement model constructor.
     * @property {module:model/CIMeasurement}
     */
    CIMeasurement,

    /**
     * The CIMeasurementOld model constructor.
     * @property {module:model/CIMeasurementOld}
     */
    CIMeasurementOld,

    /**
     * The CarbonIntensityG model constructor.
     * @property {module:model/CarbonIntensityG}
     */
    CarbonIntensityG,

    /**
     * The CarbonUg model constructor.
     * @property {module:model/CarbonUg}
     */
    CarbonUg,

    /**
     * The CbCompanyUuid model constructor.
     * @property {module:model/CbCompanyUuid}
     */
    CbCompanyUuid,

    /**
     * The CbMachineUuid model constructor.
     * @property {module:model/CbMachineUuid}
     */
    CbMachineUuid,

    /**
     * The CbProjectUuid model constructor.
     * @property {module:model/CbProjectUuid}
     */
    CbProjectUuid,

    /**
     * The City model constructor.
     * @property {module:model/City}
     */
    City,

    /**
     * The Co2Eq model constructor.
     * @property {module:model/Co2Eq}
     */
    Co2Eq,

    /**
     * The Co2I model constructor.
     * @property {module:model/Co2I}
     */
    Co2I,

    /**
     * The Email model constructor.
     * @property {module:model/Email}
     */
    Email,

    /**
     * The FilterMachine model constructor.
     * @property {module:model/FilterMachine}
     */
    FilterMachine,

    /**
     * The FilterProject model constructor.
     * @property {module:model/FilterProject}
     */
    FilterProject,

    /**
     * The FilterTags model constructor.
     * @property {module:model/FilterTags}
     */
    FilterTags,

    /**
     * The FilterType model constructor.
     * @property {module:model/FilterType}
     */
    FilterType,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The ImageUrl model constructor.
     * @property {module:model/ImageUrl}
     */
    ImageUrl,

    /**
     * The Ip model constructor.
     * @property {module:model/Ip}
     */
    Ip,

    /**
     * The JobChange model constructor.
     * @property {module:model/JobChange}
     */
    JobChange,

    /**
     * The Lat model constructor.
     * @property {module:model/Lat}
     */
    Lat,

    /**
     * The Lon model constructor.
     * @property {module:model/Lon}
     */
    Lon,

    /**
     * The Note model constructor.
     * @property {module:model/Note}
     */
    Note,

    /**
     * The ProjectId model constructor.
     * @property {module:model/ProjectId}
     */
    ProjectId,

    /**
     * The Software model constructor.
     * @property {module:model/Software}
     */
    Software,

    /**
     * The UsageScenarioVariables model constructor.
     * @property {module:model/UsageScenarioVariables}
     */
    UsageScenarioVariables,

    /**
     * The UserSetting model constructor.
     * @property {module:model/UserSetting}
     */
    UserSetting,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
     * The ValidationErrorLocInner model constructor.
     * @property {module:model/ValidationErrorLocInner}
     */
    ValidationErrorLocInner,

    /**
     * The Value model constructor.
     * @property {module:model/Value}
     */
    Value,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
